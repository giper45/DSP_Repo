{"description":"","goal":"<h1>ICMP Covert Channel</h1>\n<p>In this lab you you will own a network using a ICMP Tunnel.</p>\n<h3>Protocol Tunneling</h3>\n<p>When an attacker got a <strong>privilege scalation</strong> on a compromised machine, it would get a<strong> Persistent backdoor</strong> in order to get access even&nbsp;after the vulnerability exploited has been possibly patched.</p>\n<p>A famous tecnique to hide traffic between an hacked host and an attacker's, is the<strong> Potocol Tunneling</strong>: it consists in&nbsp;encapsulating a protocol (say TCP, UDP) in another protocol (DNS, ICMP), allowing detection evasion from poorly configured firewalls.</p>\n<p>An example of Protocol Tunneling is against Wi-Fi Captive Portals. These firewalls often allows DNS (or also ICMP) traffic even to unregistered users: this users can exploit this to create a Tunnel between an unregistered Wi-Fi client and a proxy server of their choice. Every TCP/UDP packet is encapsulated inside a DNS packet and sent to proxy server. The proxy server will de-encapsulate the packet and redirect it to the desired destination (ie, Internet)</p>\n<h3>ICMP</h3>\n<p style=\"text-align: left;\">ICMP's RFC does not specify a fixed payload size in its packets and most firewall implementations are not concernet about whats inside a ICMP packet. Furthermore, it is very unlikely that a firewall blocks ICMP traffic, due to its importance over, for example, Routing control. For instance, when a routing loop occurs in a network, IP Packets' TTL will eventually drop to zero: at this point the last router will send an ICMP: Time Exceeded message to the source IP.</p>\n<p style=\"text-align: left;\">Recall that ICMP is used with&nbsp;<em style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Echo</em>&nbsp;packets to <strong>Ping</strong> an host and test&nbsp;host reachability across a network. The pinging host sends&nbsp;an&nbsp;<em style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Echo&nbsp;</em>packet with <span style=\"text-decoration-line: underline;\">some data</span> to the pinged host, the pinged host will answer with an&nbsp;<em style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Echo Reply</em>&nbsp;containing the <span style=\"text-decoration-line: underline;\">same data</span>.</p>\n<p style=\"text-align: left;\"><img src=\"https://raw.githubusercontent.com/Guarrakesh/DSP_Repo/74ebe4397190546b2ec9973ad2bd3d721e9ee3f6/ICMP_Covert-Channel/.images/icmp_packet.png\" alt=\"\" width=\"602\" height=\"365\" /></p>\n<p style=\"text-align: left;\">&nbsp;</p>\n<h3 style=\"text-align: left;\">ICMP Tunneling&nbsp;</h3>\n<p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">In a ICMP Tunnel,&nbsp;each packet will be&nbsp;injected into an&nbsp;<em style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Echo&nbsp;</em>or&nbsp;<em style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Echo Reply</em>&nbsp;packet.&nbsp;The network will <strong>see a series of simple ping operations</strong>, but inside there could be, say,&nbsp;</span>a TCP connection...</p>\n<p><img src=\"https://raw.githubusercontent.com/Guarrakesh/DSP_Repo/master/ICMP_Covert-Channel/.images/icmp_tunnel.png\" alt=\"\" width=\"1089\" height=\"386\" /></p>\n<p>&nbsp;</p>\n<h4>Lab</h4>\n<p>In this Lab you have a Kali host attached to the same network of a compromised (and priv. ecalated) host. First, try to scan the network to see if there is some open port or if there is some block in the traffic.</p>\n<p>Then, try to shell into the compromised host and check if there is some usefool tool we can use to communicate.</p>\n<p style=\"text-align: left;\">&nbsp;</p>","solution":"<p>First of all, let's shell into the Kali and run <em>ifconfig</em>&nbsp;to see the network configuration.</p>\n<p>[Image Kali_0]</p>\n<p>Now&nbsp;we can use Fingerprint and Scanning techniques to check if there is some host around here.</p>\n<p>If we run&nbsp;<em>arp-scan&nbsp;</em>through the subnet 193.20.1.0/24 we can see if there is some host responding in the subnet</p>\n<p>[Image Kali_1]</p>\n<p>There is 193.20.1.2 alive.&nbsp;If we try to&nbsp;<em>ping</em> it we see it responds successfully.</p>\n<p>Time to try with a port scanning. Let's run nmap to scan all ports with TCP Syn/Ack technique:</p>\n<p>[Image Kali_2]</p>\n<p>As we can see. It seems there is no TCP Port open at the host. It could be that effectively there is no TCP service active or maybe the firewall is blocking all TCP connections.</p>\n<p>( Try to make the scan for UDP connections. )&nbsp;</p>\n<p>We now figured out that the host is completely unaccessible through TCP/UDP due to inactive service or firewall blocking.</p>\n<p>To see that, let's <strong>shell into</strong> the host container and run <em>iptables</em> to see something interesting.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>","readme":"","author":"guarrakesh"}
